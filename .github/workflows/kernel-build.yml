name: Build and Release Edgeble Kernel-6.1

on:
  push:
    tags:
      - 'v*' # Trigger only on version tags

jobs:
  build:
    permissions: write-all
    name: Edgeble Kernel-6.1 runner
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_rsa.pub
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/known_hosts

          # Configure SSH to use this key for GitLab
          echo -e "Host gitlab.com\n\tIdentityFile ~/.ssh/id_rsa\n" >> ~/.ssh/config

          # Test the SSH connection (optional)
          ssh -T git@gitlab.com || echo "SSH connection test failed, but continuing..."

      - name: Clone Kernel
        run: git clone git@gitlab.com:edgeble/core/kernel-6.1.git

      - name: Update LOCALVERSION dynamically
        run: |
          VERSION_TAG=${{ github.ref_name }}
          echo "Updating LOCALVERSION to -${VERSION_TAG}"
          sed -i "s/^CONFIG_LOCALVERSION=.*/CONFIG_LOCALVERSION=\"-${VERSION_TAG}\"/" .github/workflows/runner.config
          cat .github/workflows/runner.config

      - name: Copy runner.config
        run: cp .github/workflows/runner.config kernel-6.1/arch/arm64/configs/runner.config

      - name: Compile
        run: |
          cd kernel-6.1
          export CROSS_COMPILE=aarch64-linux-gnu-
          ARCH=arm64 make rockchip_linux_defconfig gpu.config edgeble-6tops.config runner.config
          mkdir -p ${{ github.workspace }}/out
          mkdir -p ${{ github.workspace }}/out/linux-6.1
          mkdir -p ${{ github.workspace }}/out/dtb/rockchip
          mkdir -p ${{ github.workspace }}/out/modules-6.1
          ARCH=arm64 make dtbs Image -j 16; ARCH=arm64 make modules -j 16; ARCH=arm64 make modules_install INSTALL_MOD_PATH=${{ github.workspace }}/out

      - name: Copy deb files and create archive
        run: |
          echo "Copy DTB:"
          cp -fv ${{ github.workspace }}/kernel-6.1/arch/arm64/boot/dts/rockchip/rk3588-edgeble-*.dtb ${{ github.workspace }}/out/dtb/rockchip
          cp -fv ${{ github.workspace }}/kernel-6.1/arch/arm64/boot/dts/rockchip/rk3588-edgeble-*.dtbo ${{ github.workspace }}/out/dtb/rockchip
          cp -fv ${{ github.workspace }}/kernel-6.1/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dtb ${{ github.workspace }}/out/dtb/rockchip

          echo "Copy config:"
          cp -fv ${{ github.workspace }}/kernel-6.1/.config ${{ github.workspace }}/out/linux-6.1

          echo "Create linux-6.1:"
          cp -frv ${{ github.workspace }}/kernel-6.1/arch/arm64/boot/Image ${{ github.workspace }}/out/dtb ${{ github.workspace }}/out/linux-6.1

          echo "Create modules-6.1:"
          cp -frv ${{ github.workspace }}/out/lib/modules/* ${{ github.workspace }}/out/modules-6.1

          echo "Create tar.xz"
          cd ${{ github.workspace }}/out/
          tar -Jcf linux-6.1.tar.xz linux-6.1 && tar -Jcf modules-6.1.tar.xz modules-6.1

      - name: Get commit body for release notes
        id: get_commit_message
        run: |
          TAG_SHA=$(git rev-list -n 1 ${{ github.ref_name }})
          echo "Commit SHA: $TAG_SHA"
          BODY=$(git log --format=%B -n 1 $TAG_SHA | tail -n +2)
          CLEAN_BODY=$(echo "$BODY" | grep -vE '^(Signed-off-by|Acked-by|Tested-by|Reviewed-by|Co-authored-by):')
          echo "Cleaned body:"
          echo "$CLEAN_BODY"
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$CLEAN_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          body: ${{ steps.get_commit_message.outputs.body }}
          files: |
            ${{ github.workspace }}/out/linux-6.1.tar.xz
            ${{ github.workspace }}/out/modules-6.1.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
